generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(cuid())
  email     String   @unique
  name      String?
  password  String
  image     String?
  role      Role     @default(USER)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  projects  Project[]
}

model Project {
  id          String   @id @default(cuid())
  title       String
  description String
  content     String   @db.Text
  image       String?
  demoUrl     String?
  repoUrl     String?
  tags        Tag[]    @relation("ProjectToTag")
  featured    Boolean  @default(false)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  userId      String
  user        User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model Tag {
  id        String    @id @default(cuid())
  name      String    @unique
  projects  Project[] @relation("ProjectToTag")
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
}

model Contact {
  id        String   @id @default(cuid())
  name      String
  email     String
  message   String   @db.Text
  read      Boolean  @default(false)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Experience {
  id          String   @id @default(cuid())
  title       String
  company     String
  description String   @db.Text
  startDate   DateTime
  endDate     DateTime?
  current     Boolean  @default(false)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model Skill {
  id        String   @id @default(cuid())
  name      String   @unique
  icon      String?
  level     Int      @default(0) // 0-100
  category  String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

enum Role {
  USER
  ADMIN
}